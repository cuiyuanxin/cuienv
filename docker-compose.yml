version: "3"
services:
  mysql:
    image: mysql:${MYSQL_VERSION}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ${MYSQL_DATA_DIR}:/var/lib/mysql:rw
      - ${MYSQL_CONFD_DIR}:/etc/mysql/conf.d:rw
      - ${MYSQL_CONFD_DIR}:/etc/mysql/mysql.conf.d:rw
      - ${MYSQL_LOG_DIR}:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_PASSWORD}"
    container_name: "${MYSQL_CONTAINER_NAME}"
  php73:
    build:
      context: ./dockerfile/php/php73
      args:
        PHP_VERSION: 7.3
        PHP_REDIS: ${PHP73_REDIS_VERSION}
        #PHP_SWOOLE_HIREDIS: ${PHP_SWOOLE_HIREDIS_VERSION}
        PHP_SWOOLE: ${PHP_SWOOLE_VERSION}
        PHP_XDEBUG: ${PHP73_XDEBUG_VERSION}
    expose: 
      - "9000"
    volumes:
      - ${WWW_DIR}:/var/www/html:rw
      - ${PHP56_CONFIG_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_FRM_CONFIG_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
    links:
      - mysql:mysql
    cap_add:
      - SYS_PTRACE
    restart: always
    networks:
      - default
    container_name: "${PHP73_CONTAINER_NAME}"
  php56:
    build:
      context: ./dockerfile/php/php56
      args:
        PHP_VERSION: 5.6
        PHP_REDIS: ${PHP56_REDIS_VERSION}
        PHP_XDEBUG: ${PHP56_XDEBUG_VERSION}
    expose: 
      - "9000"
    volumes:
      - ${WWW_DIR}:/var/www/html:rw
      - ${PHP56_CONFIG_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_FRM_CONFIG_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
    links:
      - mysql:${MYSQL_CONTAINER_NAME}
    cap_add:
      - SYS_PTRACE
    restart: always
    networks:
      - default
    container_name: "${PHP56_CONTAINER_NAME}"
  nginx:
    image: nginx:${NGINX_VERSION}
    ports:
      - ${HTTP_PORT}:80
      - ${HTTP_SSL_PORT}:443
    volumes:
      - ${WWW_DIR}:/var/www/html/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    links:
      - php73:php73
      - php56:php56
    restart: always
    container_name: "${NGINX_CONTAINER_NAME}"
  redis:
    ports:
      - 6379:6379
    image: redis
    volumes:
      - ${REDIS_DATA_DIR}:/data:rw
    restart: always
    container_name: "${REDIS_CONTAINER_NAME}"
  node:
    build:
      context: ./dockerfile/node
    ports:
      - 8080:8080
    privileged: true
    volumes:
      - ${NODE_WWW_DIR}:/var/www/html
    container_name: "${NODE_CONTAINER_NAME}"